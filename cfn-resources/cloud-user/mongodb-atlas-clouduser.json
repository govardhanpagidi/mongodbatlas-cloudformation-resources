{
    "typeName": "MongoDB::Atlas::CloudUser",
    "description": "Creates one API key for the specified organization. An organization API key grants programmatic access to an organization.",
    "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
    "definitions": {
        "Link": {
            "type": "object",
            "properties": {
                "Href": {
                    "type": "string",
                    "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with https://cloud.mongodb.com/api/atlas."
                },
                "Rel": {
                    "type": "string",
                    "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with https://cloud.mongodb.com/api/atlas."
                }
            },
            "additionalProperties": false
        },
        "ProjectAssignment": {
            "type": "object",
            "properties": {
                "RoleName": {
                    "type": "string",
                    "description": "List of roles to grant this API key. If you provide this list, provide a minimum of one role and ensure each role applies to this organization."
                },
                "ProjectId": {
                    "type": "string",
                    "description": "Unique 24-hexadecimal digit string that identifies the project in an organization."
                }
            },
            "additionalProperties": false
        },
        "ListOptions": {
            "type": "object",
            "properties": {
                "PageNum": {
                    "type": "integer",
                    "description": "Number of the page that displays the current set of the total objects that the response returns."
                },
                "ItemsPerPage": {
                    "type": "integer",
                    "description": "Number of items that the response returns per page."
                },
                "IncludeCount": {
                    "type": "boolean",
                    "description": "Flag that indicates whether the response returns the total number of items (totalCount) in the response."
                }
            },
            "additionalProperties": false
        }
    },
    "properties": {
        "Country": {
            "type": "string",
            "description": "Two alphabet characters that identifies MongoDB Cloud user's geographic location. This parameter uses the ISO 3166-1a2 code format.",
            "pattern": "string^([A-Z]{2})$"
        },
        "EmailAddress": {
            "type": "string",
            "description": "Email address that belongs to the MongoDB Cloud user.",
            "pattern": "^([a-f0-9]{24})$"
        },
        "FirstName": {
            "type": "string",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships."
        },
        "Id": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the MongoDB Cloud user."
        },
        "LastAuth": {
            "type": "string",
            "description": "Date and time when the current account last authenticated. This value is in the ISO 8601 timestamp format in UTC."
        },
        "LastName": {
            "type": "string",
            "description": "Last name, family name, or surname that belongs to the MongoDB Cloud user."
        },
        "Links": {
            "type": "array",
            "description": "List of one or more Uniform Resource Locators (URLs) that point to API sub-resources, related API resources, or both. RFC 5988 outlines these relationships.",
            "items": {
                "$ref": "#/definitions/Link",
                "type": "object"
            },
            "insertionOrder": false
        },
        "ListOptions": {
            "$ref": "#/definitions/ListOptions"
        },
        "MobileNumber": {
            "type": "string",
            "description": "Mobile phone number that belongs to the MongoDB Cloud user.",
            "pattern": "(?:(?:\\\\+?1\\\\s*(?:[.-]\\\\s*)?)?(?:(\\\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\\\s*)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\\\s*(?:[.-]\\\\s*)?)([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\\\s*(?:[.-]\\\\s*)?([0-9]{4})$"
        },
        "OrgId": {
            "type": "string",
            "description": "Unique 24-hexadecimal digit string that identifies the organization that contains your projects.",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^([a-f0-9]{24})$"
        },
        "Password": {
            "type": "string",
            "description": "Password applied with the username to log in to MongoDB Cloud. MongoDB Cloud does not return this parameter except in response to creating a new MongoDB Cloud user. Only the MongoDB Cloud user can update their password after it has been set from the MongoDB Cloud console. >= 8 characters"
        },
        "Profile": {
            "type": "string",
            "description": "The profile is defined in AWS Secret manager. See [Secret Manager Profile setup](../../../examples/profile-secret.yaml).",
            "default": "default"
        },
        "ProjectAssignments": {
            "type": "array",
            "items": {
                "type": "object",
                "$ref": "#/definitions/ProjectAssignment"
            },
            "insertionOrder": false
        },
        "Roles": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "insertionOrder": false
        },
        "TeamIds": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of unique 24-hexadecimal digit strings that identifies the teams to which this MongoDB Cloud user belongs.",
            "insertionOrder": false
        },
        "Username": {
            "type": "string",
            "description": "Email address that represents the username of the MongoDB Cloud user."
        }

    },
    "additionalProperties": false,
    "required": [
        "OrgId",
        "Description"
    ],
    "readOnlyProperties": [
        "/properties/Links",
        "/properties/PrivateKey",
        "/properties/PublicKey",
        "/properties/APIUserId"
    ],
    "createOnlyProperties": [
        "/properties/OrgId",
        "/properties/Profile",
        "/properties/Username",
        "/properties/EmailAddress",
        "/properties/FirstName",
        "/properties/LastName",
        "/properties/MobileNumber",
        "/properties/Password"
    ],
    "primaryIdentifier": [
        "/properties/OrgId",
        "/properties/Profile",
        "/properties/APIUserId"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "secretsmanager:GetSecretValue"
            ]
        },
        "read": {
            "permissions": [
                "secretsmanager:GetSecretValue"
            ]
        },
        "delete": {
            "permissions": [
                "secretsmanager:GetSecretValue"
            ]
        }
    }
}